{"version":3,"file":"preview-35755ab8.js","sources":["../../.storybook/preview.js"],"sourcesContent":["import { setCustomElementsManifest } from \"@storybook/web-components\";\nimport customElements from \"../custom-elements.json\";\n\n/**\n * A custom wrapper for the default setCustomElementsManifest function.\n * Allows to set `privateFileds` to `false` in order to filter out\n * private properties from the auto-generated docs output.\n */\nexport const setCustomElementsManifestWithOptions = (\n  customElements,\n  options\n) => {\n  let { privateFields = true } = options;\n  if (!privateFields) {\n    customElements?.modules?.forEach((module) => {\n      module?.declarations?.forEach((declaration) => {\n        Object.keys(declaration).forEach((key) => {\n          if (Array.isArray(declaration[key])) {\n            declaration[key] = declaration[key].filter((member) => {\n              return !member.privacy?.includes(\"private\");\n            });\n          }\n        });\n      });\n    });\n  }\n  return setCustomElementsManifest(customElements);\n};\n\nsetCustomElementsManifestWithOptions(customElements, { privateFields: false });\n"],"names":["setCustomElementsManifestWithOptions","customElements","options","privateFields","_a","module","declaration","key","member","setCustomElementsManifest"],"mappings":";;;;;;;;;;;;;;;;;;gkBAQaA,EAAuC,CAClDC,EACAC,IACG,OACH,GAAI,CAAE,cAAAC,EAAgB,EAAM,EAAGD,EAC/B,OAAKC,IACHC,EAAAH,GAAA,YAAAA,EAAgB,UAAhB,MAAAG,EAAyB,QAASC,GAAW,QAC3CD,EAAAC,GAAA,YAAAA,EAAQ,eAAR,MAAAD,EAAsB,QAASE,GAAgB,CAC7C,OAAO,KAAKA,CAAW,EAAE,QAASC,GAAQ,CACpC,MAAM,QAAQD,EAAYC,CAAG,CAAC,IAChCD,EAAYC,CAAG,EAAID,EAAYC,CAAG,EAAE,OAAQC,GAAW,OACrD,MAAO,GAACJ,EAAAI,EAAO,UAAP,MAAAJ,EAAgB,SAAS,WAC/C,CAAa,EAEb,CAAS,CACT,EACA,GAESK,EAA0BR,CAAc,CACjD,EAEAD,EAAqCC,EAAgB,CAAE,cAAe,GAAO"}